# Unified Makefile for Dialogs RAG System
# Поддерживает все режимы: legacy, pipeline, enhanced, scaled

include .env

# Переменные
PY := python
BATCH ?= $(BATCH_ID)
N_DIALOGS ?= $(N_DIALOGS)
MODE ?= auto

# Цвета для вывода
GREEN := \033[0;32m
YELLOW := \033[1;33m
RED := \033[0;31m
NC := \033[0m # No Color

# ==================== ОСНОВНЫЕ КОМАНДЫ ====================

.PHONY: help
help: ## Показать справку
	@echo "$(GREEN)Dialogs RAG System - Unified Makefile$(NC)"
	@echo ""
	@echo "$(YELLOW)Основные команды:$(NC)"
	@echo "  setup          - Установка зависимостей"
	@echo "  detect         - Определение текущего режима данных"
	@echo "  migrate        - Миграция в scaled режим"
	@echo "  run-unified    - Запуск унифицированного пайплайна"
	@echo "  api            - Запуск унифицированного API"
	@echo "  dashboard      - Запуск унифицированного дашборда"
	@echo ""
	@echo "$(YELLOW)Режимы работы:$(NC)"
	@echo "  run-legacy     - Запуск legacy пайплайна"
	@echo "  run-pipeline   - Запуск pipeline пайплайна"
	@echo "  run-enhanced   - Запуск enhanced пайплайна"
	@echo "  run-scaled     - Запуск scaled пайплайна"
	@echo ""
	@echo "$(YELLOW)Утилиты:$(NC)"
	@echo "  quality        - Проверка качества"
	@echo "  clean          - Очистка временных файлов"
	@echo "  backup         - Создание резервной копии"

.PHONY: setup
setup: ## Установка зависимостей
	@echo "$(GREEN)Установка зависимостей...$(NC)"
	$(PY) -m pip install -r requirements.txt
	@echo "$(GREEN)Зависимости установлены$(NC)"

.PHONY: detect
detect: ## Определение текущего режима данных
	@echo "$(YELLOW)Определение текущего режима данных...$(NC)"
	$(PY) migration/migration_tools.py --action detect

.PHONY: migrate
migrate: ## Миграция в scaled режим
	@echo "$(YELLOW)Миграция в scaled режим...$(NC)"
	$(PY) migration/migration_tools.py --action migrate --target-mode scaled

.PHONY: validate
validate: ## Валидация миграции
	@echo "$(YELLOW)Валидация миграции...$(NC)"
	$(PY) migration/migration_tools.py --action validate --target-mode scaled

# ==================== УНИФИЦИРОВАННЫЙ ПАЙПЛАЙН ====================

.PHONY: run-unified
run-unified: ## Запуск унифицированного пайплайна
	@echo "$(GREEN)Запуск унифицированного пайплайна в режиме $(MODE)...$(NC)"
	$(PY) pipeline/unified_manager.py --mode $(MODE) --input data/input/dialogs.xlsx --batch $(BATCH) --n-dialogs $(N_DIALOGS)

# ==================== РЕЖИМЫ РАБОТЫ ====================

.PHONY: run-legacy
run-legacy: ## Запуск legacy пайплайна
	@echo "$(GREEN)Запуск legacy пайплайна...$(NC)"
	$(PY) pipeline/unified_manager.py --mode legacy --input data/input/dialogs.xlsx --batch $(BATCH) --n-dialogs $(N_DIALOGS)

.PHONY: run-pipeline
run-pipeline: ## Запуск pipeline пайплайна
	@echo "$(GREEN)Запуск pipeline пайплайна...$(NC)"
	$(PY) pipeline/unified_manager.py --mode pipeline --input data/input/dialogs.xlsx --batch $(BATCH) --n-dialogs $(N_DIALOGS)

.PHONY: run-enhanced
run-enhanced: ## Запуск enhanced пайплайна
	@echo "$(GREEN)Запуск enhanced пайплайна...$(NC)"
	$(PY) pipeline/unified_manager.py --mode enhanced --input data/input/dialogs.xlsx --batch $(BATCH) --n-dialogs $(N_DIALOGS)

.PHONY: run-scaled
run-scaled: ## Запуск scaled пайплайна
	@echo "$(GREEN)Запуск scaled пайплайна...$(NC)"
	$(PY) pipeline/unified_manager.py --mode scaled --input data/input/dialogs.xlsx --batch $(BATCH) --n-dialogs $(N_DIALOGS)

# ==================== API И ДАШБОРД ====================

.PHONY: api
api: ## Запуск унифицированного API
	@echo "$(GREEN)Запуск унифицированного API...$(NC)"
	$(PY) api/unified_api.py

.PHONY: api-legacy
api-legacy: ## Запуск legacy API
	@echo "$(GREEN)Запуск legacy API...$(NC)"
	uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

.PHONY: dashboard
dashboard: ## Запуск унифицированного дашборда
	@echo "$(GREEN)Запуск унифицированного дашборда...$(NC)"
	streamlit run dashboard/unified_dashboard.py --server.port 8501

.PHONY: dashboard-legacy
dashboard-legacy: ## Запуск legacy дашборда
	@echo "$(GREEN)Запуск legacy дашборда...$(NC)"
	streamlit run dashboard/pipeline_dashboard.py --server.port 8501

# ==================== КАЧЕСТВО И ВАЛИДАЦИЯ ====================

.PHONY: quality
quality: ## Проверка качества данных
	@echo "$(YELLOW)Проверка качества данных...$(NC)"
	$(PY) -c "from quality.unified_quality import quality_checker; import json; print(json.dumps(quality_checker.get_quality_report(), indent=2, ensure_ascii=False))"

.PHONY: quality-legacy
quality-legacy: ## Проверка качества legacy данных
	@echo "$(YELLOW)Проверка качества legacy данных...$(NC)"
	$(PY) -m pipeline.quality --batch $(BATCH) --n_dialogs $(N_DIALOGS)

# ==================== УТИЛИТЫ ====================

.PHONY: clean
clean: ## Очистка временных файлов
	@echo "$(YELLOW)Очистка временных файлов...$(NC)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type f -name "*.log" -delete
	rm -rf .pytest_cache/
	rm -rf .mypy_cache/
	@echo "$(GREEN)Очистка завершена$(NC)"

.PHONY: backup
backup: ## Создание резервной копии
	@echo "$(YELLOW)Создание резервной копии...$(NC)"
	$(PY) migration/migration_tools.py --action migrate --no-backup

.PHONY: status
status: ## Статус системы
	@echo "$(YELLOW)Статус системы...$(NC)"
	$(PY) migration/migration_tools.py --action status

# ==================== РАЗРАБОТКА И ТЕСТИРОВАНИЕ ====================

.PHONY: test
test: ## Запуск тестов
	@echo "$(YELLOW)Запуск тестов...$(NC)"
	$(PY) -m pytest tests/ -v

.PHONY: lint
lint: ## Проверка кода
	@echo "$(YELLOW)Проверка кода...$(NC)"
	$(PY) -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
	$(PY) -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

.PHONY: format
format: ## Форматирование кода
	@echo "$(YELLOW)Форматирование кода...$(NC)"
	$(PY) -m black .
	$(PY) -m isort .

# ==================== ДОКУМЕНТАЦИЯ ====================

.PHONY: docs
docs: ## Генерация документации
	@echo "$(YELLOW)Генерация документации...$(NC)"
	$(PY) -m pydoc -w api.unified_api
	$(PY) -m pydoc -w pipeline.unified_manager
	$(PY) -m pydoc -w quality.unified_quality

# ==================== МОНИТОРИНГ ====================

.PHONY: monitor
monitor: ## Мониторинг системы
	@echo "$(YELLOW)Мониторинг системы...$(NC)"
	@echo "API статус:"
	@curl -s http://localhost:8000/api/health | $(PY) -m json.tool || echo "API недоступен"
	@echo ""
	@echo "Качество данных:"
	@curl -s http://localhost:8000/api/quality | $(PY) -m json.tool || echo "API недоступен"

# ==================== ПРОИЗВОДИТЕЛЬНОСТЬ ====================

.PHONY: benchmark
benchmark: ## Бенчмарк производительности
	@echo "$(YELLOW)Бенчмарк производительности...$(NC)"
	$(PY) -c "import time; start=time.time(); exec(open('benchmark.py').read()); print(f'Время выполнения: {time.time()-start:.2f}с')" || echo "Файл benchmark.py не найден"

.PHONY: profile
profile: ## Профилирование
	@echo "$(YELLOW)Профилирование...$(NC)"
	$(PY) -m cProfile -o profile.prof pipeline/unified_manager.py --mode scaled --input data/input/dialogs.xlsx
	$(PY) -c "import pstats; p=pstats.Stats('profile.prof'); p.sort_stats('cumulative').print_stats(10)"

# ==================== РАЗВЕРТЫВАНИЕ ====================

.PHONY: deploy
deploy: ## Развертывание системы
	@echo "$(GREEN)Развертывание системы...$(NC)"
	@echo "1. Установка зависимостей..."
	@$(MAKE) setup
	@echo "2. Миграция данных..."
	@$(MAKE) migrate
	@echo "3. Валидация..."
	@$(MAKE) validate
	@echo "4. Запуск API..."
	@$(MAKE) api &
	@echo "5. Запуск дашборда..."
	@$(MAKE) dashboard &
	@echo "$(GREEN)Развертывание завершено$(NC)"

.PHONY: stop
stop: ## Остановка сервисов
	@echo "$(YELLOW)Остановка сервисов...$(NC)"
	@pkill -f "uvicorn api.unified_api"
	@pkill -f "streamlit run dashboard.unified_dashboard"
	@echo "$(GREEN)Сервисы остановлены$(NC)"

# ==================== ПО УМОЛЧАНИЮ ====================

.DEFAULT_GOAL := help
